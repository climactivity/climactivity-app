[gd_resource type="VisualShader" load_steps=13 format=2]

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 1.5 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=13]
default_input_values = [ 0, 0.5, 1, 0.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=15]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=16]
default_input_values = [ 0, 0.0, 1, 0.005 ]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=5]
uniform_name = "main"
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=7]
function = 0

[sub_resource type="VisualShaderNodeVectorDecompose" id=8]

[sub_resource type="VisualShaderNodeVectorCompose" id=9]

[sub_resource type="VisualShaderNodeScalarOp" id=10]
operator = 5

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "time"

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, unshaded;

uniform sampler2D main : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorDecompose:6
	float n_out6p0 = n_out3p0.x;
	float n_out6p1 = n_out3p0.y;
	float n_out6p2 = n_out3p0.z;

// ScalarOp:19
	float n_in19p1 = 0.00500;
	float n_out19p0 = n_out6p1 * n_in19p1;

// ScalarFunc:4
	float n_out4p0 = sin(n_out19p0);

// Input:9
	float n_out9p0 = TIME;

// ScalarOp:18
	float n_out18p0 = n_out4p0 * n_out9p0;

// ScalarOp:17
	float n_in17p1 = 1.00000;
	float n_out17p0 = n_out18p0 + n_in17p1;

// ScalarOp:13
	float n_in13p1 = 1.50000;
	float n_out13p0 = n_out17p0 * n_in13p1;

// ScalarOp:15
	float n_in15p0 = 0.50000;
	float n_out15p0 = n_in15p0 + n_out13p0;

// ScalarOp:8
	float n_out8p0 = pow(n_out6p0, n_out15p0);

// VectorCompose:7
	vec3 n_out7p0 = vec3(n_out8p0, n_out6p1, n_out6p2);

// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(main, n_out7p0.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -489, 225 )
flags/unshaded = true
nodes/fragment/0/position = Vector2( 900, 280 )
nodes/fragment/2/node = SubResource( 5 )
nodes/fragment/2/position = Vector2( 660, 200 )
nodes/fragment/3/node = SubResource( 6 )
nodes/fragment/3/position = Vector2( -580, 260 )
nodes/fragment/4/node = SubResource( 7 )
nodes/fragment/4/position = Vector2( -320, 660 )
nodes/fragment/6/node = SubResource( 8 )
nodes/fragment/6/position = Vector2( -320, 260 )
nodes/fragment/7/node = SubResource( 9 )
nodes/fragment/7/position = Vector2( 460, 260 )
nodes/fragment/8/node = SubResource( 10 )
nodes/fragment/8/position = Vector2( 220, 380 )
nodes/fragment/9/node = SubResource( 11 )
nodes/fragment/9/position = Vector2( -800, 680 )
nodes/fragment/13/node = SubResource( 12 )
nodes/fragment/13/position = Vector2( 220, 580 )
nodes/fragment/15/node = SubResource( 13 )
nodes/fragment/15/position = Vector2( 220, 480 )
nodes/fragment/17/node = SubResource( 14 )
nodes/fragment/17/position = Vector2( 220, 680 )
nodes/fragment/18/node = SubResource( 15 )
nodes/fragment/18/position = Vector2( -120, 740 )
nodes/fragment/19/node = SubResource( 16 )
nodes/fragment/19/position = Vector2( -360, 440 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 2, 1, 0, 1, 3, 0, 6, 0, 7, 0, 2, 0, 6, 0, 8, 0, 8, 0, 7, 0, 6, 2, 7, 2, 13, 0, 15, 1, 15, 0, 8, 1, 17, 0, 13, 0, 6, 1, 7, 1, 6, 1, 19, 0, 19, 0, 4, 0, 4, 0, 18, 0, 9, 0, 18, 1, 18, 0, 17, 0 )
