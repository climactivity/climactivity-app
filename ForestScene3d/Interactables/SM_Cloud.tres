[gd_resource type="ShaderMaterial" load_steps=5 format=2]

[ext_resource path="res://Assets/sketch/wolke_outline.png" type="Texture" id=1]
[ext_resource path="res://Assets/sketch/wolke_mask.png" type="Texture" id=2]
[ext_resource path="res://Assets/sketch/wolke_outline_gestrichelt.png" type="Texture" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode unshaded;

uniform float fill_state : hint_range(0.0,1.0) = 0.5; 
uniform float fill_start : hint_range(0.0,1.0) = 0.164; 
uniform float fill_end : hint_range(0.0,1.0) = 0.723; 
uniform sampler2D empty_texture : hint_albedo; 
uniform sampler2D filled_texture : hint_albedo; 
uniform sampler2D fill_mask : hint_albedo; 

uniform vec4 fill_color : hint_color;

float mapToRange(float x, float inMin, float inMax, float outMin, float outMax) {
	  return (x - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;
}

void fragment() {
	if (fill_state == 0.0) {
		COLOR = texture(empty_texture, UV);
		return
	} else {
		float fill_point = mapToRange(1.0 - fill_state, 0.0, 1.0, fill_start, fill_end);
		vec4 outline_color = texture(filled_texture, UV);
		if (outline_color.a == 0.0) {
			if (UV.y >= fill_point && UV.y < fill_end) {
			COLOR = fill_color * texture(fill_mask, UV);
			} else {
				COLOR = vec4(0.0);
			}
		} else {
			COLOR = texture(filled_texture, UV);
		}

	}
} "

[resource]
shader = SubResource( 1 )
shader_param/fill_state = 0.0
shader_param/fill_start = 0.164
shader_param/fill_end = 0.723
shader_param/fill_color = Color( 0.105882, 0.254902, 0.823529, 0.572549 )
shader_param/empty_texture = ExtResource( 3 )
shader_param/filled_texture = ExtResource( 1 )
shader_param/fill_mask = ExtResource( 2 )
